{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_FEED",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x68e0705184d58b6fa808e1663af7a14719e164c547cc84a735524f13786af5ad",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "959832",
    "logsBloom": "0x
    "blockHash": "0x01fd6337d582bdb0cc7f8df14b611fbbbb508b33af2a78838694823f931b22f9",
    "transactionHash": "0x68e0705184d58b6fa808e1663af7a14719e164c547cc84a735524f13786af5ad",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "959832",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
  ],
  "numDeployments": 1,
  "solcInputHash": "00c001aa9a45d4afa254357c06bf90f2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n///@title A contract for crowd funding\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n\\n    AggregatorV3Interface public PRICE_FEED;\\n\\n\\n    //CONSTRUCTOR\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        PRICE_FEED = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(PRICE_FEED) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(PRICE_FEED);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xaa2e38ccac56a0bb4da34e938a7e990f428f47852b45b3c59e1e4190b4fe2590\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x73d776b0f42701c1179d479e39fc877fc3d09f90f16a315df6c6766e881e114f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010fe380380620010fe83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f92806200016c6000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c1461009857806331eb318a146100c35780633ccfd60b146100ee5780633e47d6f3146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610853565b60405180910390f35b3480156100cf57600080fd5b506100d86103c5565b6040516100e591906108ed565b60405180910390f35b3480156100fa57600080fd5b506101036103eb565b005b34801561011157600080fd5b5061012c6004803603810190610127919061094b565b61062d565b6040516101399190610853565b60405180910390f35b34801561014e57600080fd5b50610157610645565b6040516101649190610853565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610652565b6040516101999190610987565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109ce565b610678565b6040516101d69190610987565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b790919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a58565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610aa7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610b12565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610472576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561051d5760006001828154811061049857610497610b3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051590610b6e565b915050610475565b50600067ffffffffffffffff81111561053957610538610bb7565b5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b506001908051906020019061057d929190610793565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a490610c17565b60006040518083038185875af1925050503d80600081146105e1576040519150601f19603f3d011682016040523d82523d6000602084013e6105e6565b606091505b505090508061062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610c78565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061068857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106c3836106f3565b90506000670de0b6b3a764000085836106dc9190610c98565b6106e69190610d21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073c57600080fd5b505afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610dca565b5050509150506402540be4008161078b9190610e45565b915050919050565b82805482825590600052602060002090810192821561080c579160200282015b8281111561080b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107b3565b5b509050610819919061081d565b5090565b5b8082111561083657600081600090555060010161081e565b5090565b6000819050919050565b61084d8161083a565b82525050565b60006020820190506108686000830184610844565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108b36108ae6108a98461086e565b61088e565b61086e565b9050919050565b60006108c582610898565b9050919050565b60006108d7826108ba565b9050919050565b6108e7816108cc565b82525050565b600060208201905061090260008301846108de565b92915050565b600080fd5b60006109188261086e565b9050919050565b6109288161090d565b811461093357600080fd5b50565b6000813590506109458161091f565b92915050565b60006020828403121561096157610960610908565b5b600061096f84828501610936565b91505092915050565b6109818161090d565b82525050565b600060208201905061099c6000830184610978565b92915050565b6109ab8161083a565b81146109b657600080fd5b50565b6000813590506109c8816109a2565b92915050565b6000602082840312156109e4576109e3610908565b5b60006109f2848285016109b9565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a42601b836109fb565b9150610a4d82610a0c565b602082019050919050565b60006020820190508181036000830152610a7181610a35565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab28261083a565b9150610abd8361083a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610af257610af1610a78565b5b828201905092915050565b600081519050610b0c816109a2565b92915050565b600060208284031215610b2857610b27610908565b5b6000610b3684828501610afd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b798261083a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bac57610bab610a78565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c01600083610be6565b9150610c0c82610bf1565b600082019050919050565b6000610c2282610bf4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c62600b836109fb565b9150610c6d82610c2c565b602082019050919050565b60006020820190508181036000830152610c9181610c55565b9050919050565b6000610ca38261083a565b9150610cae8361083a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce757610ce6610a78565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2c8261083a565b9150610d378361083a565b925082610d4757610d46610cf2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7181610d52565b8114610d7c57600080fd5b50565b600081519050610d8e81610d68565b92915050565b6000819050919050565b610da781610d94565b8114610db257600080fd5b50565b600081519050610dc481610d9e565b92915050565b600080600080600060a08688031215610de657610de5610908565b5b6000610df488828901610d7f565b9550506020610e0588828901610db5565b9450506040610e1688828901610afd565b9350506060610e2788828901610afd565b9250506080610e3888828901610d7f565b9150509295509295909350565b6000610e5082610d94565b9150610e5b83610d94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9a57610e99610a78565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed757610ed6610a78565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1457610f13610a78565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5157610f50610a78565b5b82820290509291505056fea2646970667358221220b47c17d89fe7962d3652ceb08a44c231c46976870f8f906e7005ad301e4b84a364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c1461009857806331eb318a146100c35780633ccfd60b146100ee5780633e47d6f3146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610853565b60405180910390f35b3480156100cf57600080fd5b506100d86103c5565b6040516100e591906108ed565b60405180910390f35b3480156100fa57600080fd5b506101036103eb565b005b34801561011157600080fd5b5061012c6004803603810190610127919061094b565b61062d565b6040516101399190610853565b60405180910390f35b34801561014e57600080fd5b50610157610645565b6040516101649190610853565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610652565b6040516101999190610987565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109ce565b610678565b6040516101d69190610987565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b790919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a58565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610aa7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610b12565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610472576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561051d5760006001828154811061049857610497610b3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051590610b6e565b915050610475565b50600067ffffffffffffffff81111561053957610538610bb7565b5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b506001908051906020019061057d929190610793565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a490610c17565b60006040518083038185875af1925050503d80600081146105e1576040519150601f19603f3d011682016040523d82523d6000602084013e6105e6565b606091505b505090508061062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190610c78565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061068857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106c3836106f3565b90506000670de0b6b3a764000085836106dc9190610c98565b6106e69190610d21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073c57600080fd5b505afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610dca565b5050509150506402540be4008161078b9190610e45565b915050919050565b82805482825590600052602060002090810192821561080c579160200282015b8281111561080b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107b3565b5b509050610819919061081d565b5090565b5b8082111561083657600081600090555060010161081e565b5090565b6000819050919050565b61084d8161083a565b82525050565b60006020820190506108686000830184610844565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108b36108ae6108a98461086e565b61088e565b61086e565b9050919050565b60006108c582610898565b9050919050565b60006108d7826108ba565b9050919050565b6108e7816108cc565b82525050565b600060208201905061090260008301846108de565b92915050565b600080fd5b60006109188261086e565b9050919050565b6109288161090d565b811461093357600080fd5b50565b6000813590506109458161091f565b92915050565b60006020828403121561096157610960610908565b5b600061096f84828501610936565b91505092915050565b6109818161090d565b82525050565b600060208201905061099c6000830184610978565b92915050565b6109ab8161083a565b81146109b657600080fd5b50565b6000813590506109c8816109a2565b92915050565b6000602082840312156109e4576109e3610908565b5b60006109f2848285016109b9565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a42601b836109fb565b9150610a4d82610a0c565b602082019050919050565b60006020820190508181036000830152610a7181610a35565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab28261083a565b9150610abd8361083a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610af257610af1610a78565b5b828201905092915050565b600081519050610b0c816109a2565b92915050565b600060208284031215610b2857610b27610908565b5b6000610b3684828501610afd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b798261083a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bac57610bab610a78565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c01600083610be6565b9150610c0c82610bf1565b600082019050919050565b6000610c2282610bf4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c62600b836109fb565b9150610c6d82610c2c565b602082019050919050565b60006020820190508181036000830152610c9181610c55565b9050919050565b6000610ca38261083a565b9150610cae8361083a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce757610ce6610a78565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2c8261083a565b9150610d378361083a565b925082610d4757610d46610cf2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7181610d52565b8114610d7c57600080fd5b50565b600081519050610d8e81610d68565b92915050565b6000819050919050565b610da781610d94565b8114610db257600080fd5b50565b600081519050610dc481610d9e565b92915050565b600080600080600060a08688031215610de657610de5610908565b5b6000610df488828901610d7f565b9550506020610e0588828901610db5565b9450506040610e1688828901610afd565b9350506060610e2788828901610afd565b9250506080610e3888828901610d7f565b9150509295509295909350565b6000610e5082610d94565b9150610e5b83610d94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9a57610e99610a78565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed757610ed6610a78565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1457610f13610a78565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5157610f50610a78565b5b82820290509291505056fea2646970667358221220b47c17d89fe7962d3652ceb08a44c231c46976870f8f906e7005ad301e4b84a364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "PRICE_FEED",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}