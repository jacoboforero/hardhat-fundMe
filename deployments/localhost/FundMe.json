{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_FEED",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3239cbea95debcd97e7ffe2e97b83e9cc35dfa81dd0d717c217fdc298b03ecf5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1106045",
    "logsBloom": "0x
    "blockHash": "0xe318d3275b2dbd584466695758cb871a5f08b07ada582683847122618dcd82a5",
    "transactionHash": "0x3239cbea95debcd97e7ffe2e97b83e9cc35dfa81dd0d717c217fdc298b03ecf5",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1106045",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "24903eabf027e804890fe837e42d2e64",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n///@title A contract for crowd funding\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public PRICE_FEED;\\n\\n    //CONSTRUCTOR\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        PRICE_FEED = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(PRICE_FEED) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(PRICE_FEED);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory memfunders = funders;\\n        for(uint256 funderIndex = 0; funderIndex < memfunders.length; funderIndex++){\\n            address funder = memfunders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xe48fd93e9c8e205f852e9e444c165b07ed67410eceba3e3c29abbf7e2dce836c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x73d776b0f42701c1179d479e39fc877fc3d09f90f16a315df6c6766e881e114f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013a5380380620013a583398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611239806200016c6000396000f3fe60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a5921461014d578063b60d428814610178578063be2693f014610182578063dba6335f1461018c578063dc0d3dff146101b757610099565b80630d8e6e2c146100a357806331eb318a146100ce5780633ccfd60b146100f95780633e47d6f31461011057610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100b861032e565b6040516100c59190610afa565b60405180910390f35b3480156100da57600080fd5b506100e36103da565b6040516100f09190610b94565b60405180910390f35b34801561010557600080fd5b5061010e610400565b005b34801561011c57600080fd5b5061013760048036038101906101329190610bf2565b610642565b6040516101449190610afa565b60405180910390f35b34801561015957600080fd5b5061016261065a565b60405161016f9190610afa565b60405180910390f35b6101806101f4565b005b61018a610667565b005b34801561019857600080fd5b506101a16108f9565b6040516101ae9190610c2e565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610c75565b61091f565b6040516101eb9190610c2e565b60405180910390f35b6802b5e3af16b1880000610233600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095e90919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610cff565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610d4e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561039c57600080fd5b505afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d49190610db9565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610487576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610532576000600182815481106104ad576104ac610de6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061052a90610e15565b91505061048a565b50600067ffffffffffffffff81111561054e5761054d610e5e565b5b60405190808252806020026020018201604052801561057c5781602001602082028036833780820191505090505b5060019080519060200190610592929190610a3a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105b990610ebe565b60006040518083038185875af1925050503d80600081146105f6576040519150601f19603f3d011682016040523d82523d6000602084013e6105fb565b606091505b505090508061063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610f1f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561077257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610728575b5050505050905060005b81518110156107fc57600082828151811061079a57610799610de6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107f490610e15565b91505061077c565b50600067ffffffffffffffff81111561081857610817610e5e565b5b6040519080825280602002602001820160405280156108465781602001602082028036833780820191505090505b506001908051906020019061085c929190610a3a565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108a590610ebe565b60006040518083038185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b50509050806108f557600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061092f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096a8361099a565b90506000670de0b6b3a764000085836109839190610f3f565b61098d9190610fc8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e357600080fd5b505afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b9190611071565b5050509150506402540be40081610a3291906110ec565b915050919050565b828054828255906000526020600020908101928215610ab3579160200282015b82811115610ab25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5a565b5b509050610ac09190610ac4565b5090565b5b80821115610add576000816000905550600101610ac5565b5090565b6000819050919050565b610af481610ae1565b82525050565b6000602082019050610b0f6000830184610aeb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b5a610b55610b5084610b15565b610b35565b610b15565b9050919050565b6000610b6c82610b3f565b9050919050565b6000610b7e82610b61565b9050919050565b610b8e81610b73565b82525050565b6000602082019050610ba96000830184610b85565b92915050565b600080fd5b6000610bbf82610b15565b9050919050565b610bcf81610bb4565b8114610bda57600080fd5b50565b600081359050610bec81610bc6565b92915050565b600060208284031215610c0857610c07610baf565b5b6000610c1684828501610bdd565b91505092915050565b610c2881610bb4565b82525050565b6000602082019050610c436000830184610c1f565b92915050565b610c5281610ae1565b8114610c5d57600080fd5b50565b600081359050610c6f81610c49565b92915050565b600060208284031215610c8b57610c8a610baf565b5b6000610c9984828501610c60565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce9601b83610ca2565b9150610cf482610cb3565b602082019050919050565b60006020820190508181036000830152610d1881610cdc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5982610ae1565b9150610d6483610ae1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9957610d98610d1f565b5b828201905092915050565b600081519050610db381610c49565b92915050565b600060208284031215610dcf57610dce610baf565b5b6000610ddd84828501610da4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2082610ae1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5357610e52610d1f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ea8600083610e8d565b9150610eb382610e98565b600082019050919050565b6000610ec982610e9b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f09600b83610ca2565b9150610f1482610ed3565b602082019050919050565b60006020820190508181036000830152610f3881610efc565b9050919050565b6000610f4a82610ae1565b9150610f5583610ae1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f8e57610f8d610d1f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fd382610ae1565b9150610fde83610ae1565b925082610fee57610fed610f99565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61101881610ff9565b811461102357600080fd5b50565b6000815190506110358161100f565b92915050565b6000819050919050565b61104e8161103b565b811461105957600080fd5b50565b60008151905061106b81611045565b92915050565b600080600080600060a0868803121561108d5761108c610baf565b5b600061109b88828901611026565b95505060206110ac8882890161105c565b94505060406110bd88828901610da4565b93505060606110ce88828901610da4565b92505060806110df88828901611026565b9150509295509295909350565b60006110f78261103b565b91506111028361103b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561114157611140610d1f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561117e5761117d610d1f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111bb576111ba610d1f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111f8576111f7610d1f565b5b82820290509291505056fea264697066735822122056032ea6e197ee5284db40b8cdd5de3901d7f5fb545def4740754e4b41e9d3f764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a5921461014d578063b60d428814610178578063be2693f014610182578063dba6335f1461018c578063dc0d3dff146101b757610099565b80630d8e6e2c146100a357806331eb318a146100ce5780633ccfd60b146100f95780633e47d6f31461011057610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100b861032e565b6040516100c59190610afa565b60405180910390f35b3480156100da57600080fd5b506100e36103da565b6040516100f09190610b94565b60405180910390f35b34801561010557600080fd5b5061010e610400565b005b34801561011c57600080fd5b5061013760048036038101906101329190610bf2565b610642565b6040516101449190610afa565b60405180910390f35b34801561015957600080fd5b5061016261065a565b60405161016f9190610afa565b60405180910390f35b6101806101f4565b005b61018a610667565b005b34801561019857600080fd5b506101a16108f9565b6040516101ae9190610c2e565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610c75565b61091f565b6040516101eb9190610c2e565b60405180910390f35b6802b5e3af16b1880000610233600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095e90919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610cff565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610d4e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561039c57600080fd5b505afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d49190610db9565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610487576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610532576000600182815481106104ad576104ac610de6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061052a90610e15565b91505061048a565b50600067ffffffffffffffff81111561054e5761054d610e5e565b5b60405190808252806020026020018201604052801561057c5781602001602082028036833780820191505090505b5060019080519060200190610592929190610a3a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105b990610ebe565b60006040518083038185875af1925050503d80600081146105f6576040519150601f19603f3d011682016040523d82523d6000602084013e6105fb565b606091505b505090508061063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610f1f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561077257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610728575b5050505050905060005b81518110156107fc57600082828151811061079a57610799610de6565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107f490610e15565b91505061077c565b50600067ffffffffffffffff81111561081857610817610e5e565b5b6040519080825280602002602001820160405280156108465781602001602082028036833780820191505090505b506001908051906020019061085c929190610a3a565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516108a590610ebe565b60006040518083038185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b50509050806108f557600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061092f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061096a8361099a565b90506000670de0b6b3a764000085836109839190610f3f565b61098d9190610fc8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109e357600080fd5b505afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b9190611071565b5050509150506402540be40081610a3291906110ec565b915050919050565b828054828255906000526020600020908101928215610ab3579160200282015b82811115610ab25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a5a565b5b509050610ac09190610ac4565b5090565b5b80821115610add576000816000905550600101610ac5565b5090565b6000819050919050565b610af481610ae1565b82525050565b6000602082019050610b0f6000830184610aeb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b5a610b55610b5084610b15565b610b35565b610b15565b9050919050565b6000610b6c82610b3f565b9050919050565b6000610b7e82610b61565b9050919050565b610b8e81610b73565b82525050565b6000602082019050610ba96000830184610b85565b92915050565b600080fd5b6000610bbf82610b15565b9050919050565b610bcf81610bb4565b8114610bda57600080fd5b50565b600081359050610bec81610bc6565b92915050565b600060208284031215610c0857610c07610baf565b5b6000610c1684828501610bdd565b91505092915050565b610c2881610bb4565b82525050565b6000602082019050610c436000830184610c1f565b92915050565b610c5281610ae1565b8114610c5d57600080fd5b50565b600081359050610c6f81610c49565b92915050565b600060208284031215610c8b57610c8a610baf565b5b6000610c9984828501610c60565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce9601b83610ca2565b9150610cf482610cb3565b602082019050919050565b60006020820190508181036000830152610d1881610cdc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5982610ae1565b9150610d6483610ae1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9957610d98610d1f565b5b828201905092915050565b600081519050610db381610c49565b92915050565b600060208284031215610dcf57610dce610baf565b5b6000610ddd84828501610da4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2082610ae1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5357610e52610d1f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ea8600083610e8d565b9150610eb382610e98565b600082019050919050565b6000610ec982610e9b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f09600b83610ca2565b9150610f1482610ed3565b602082019050919050565b60006020820190508181036000830152610f3881610efc565b9050919050565b6000610f4a82610ae1565b9150610f5583610ae1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f8e57610f8d610d1f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fd382610ae1565b9150610fde83610ae1565b925082610fee57610fed610f99565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61101881610ff9565b811461102357600080fd5b50565b6000815190506110358161100f565b92915050565b6000819050919050565b61104e8161103b565b811461105957600080fd5b50565b60008151905061106b81611045565b92915050565b600080600080600060a0868803121561108d5761108c610baf565b5b600061109b88828901611026565b95505060206110ac8882890161105c565b94505060406110bd88828901610da4565b93505060606110ce88828901610da4565b92505060806110df88828901611026565b9150509295509295909350565b60006110f78261103b565b91506111028361103b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561114157611140610d1f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561117e5761117d610d1f565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111bb576111ba610d1f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111f8576111f7610d1f565b5b82820290509291505056fea264697066735822122056032ea6e197ee5284db40b8cdd5de3901d7f5fb545def4740754e4b41e9d3f764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "PRICE_FEED",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}